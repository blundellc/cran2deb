#!/usr/bin/env r

suppressPackageStartupMessages(library(cran2deb))
suppressPackageStartupMessages(library(digest))

exec_cmd <- function(argc, argv) {
    usage <- function()
        message('usage: add <license> [deny]|file <license> <path>|ls|quit|help')

    cmd = argv[1]
    if (argc < 1) {
        exit()
    }

    if (cmd == 'add') {
        if (argc != 2 && (argc != 3 || argv[3] != 'deny')) {
            usage()
            return()
        }
        accept = (argc != 3)
        db.add.license.override(argv[2],accept)
    } else if (cmd == 'file') {
        if (argc != 3) {
            usage()
            return()
        }
        license = argv[2]
        path = argv[3]
        if (is.null(db.license.override.name(license))) {
            message(paste('license',license,'is not known'))
            return()
        }
        if (file.exists(path)) {
            file_sha1 = digest(readChar(path,file.info(path)$size)
                              ,algo='sha1', serialize=FALSE)
        } else if (length(grep('^[0-9a-f]{40}$',path))) {
            file_sha1 = path
        } else {
            stop(paste(path,'does not exist and does not look like an SHA1 hash'))
        }
        db.add.license.file(license,file_sha1)
    } else if (cmd == 'ls') {
        for (x in db.license.overrides()) print(x)
    } else if (cmd == 'help') {
        usage()
        return()
    } else if (cmd == 'quit') {
        exit()
    }
}

argc <- length(argv)
if (argc > 1) {
    exec_cmd(argc-1,argv[c(2:argc)])
} else {
    while(T) {
        argv <- strsplit(readline('license> '),'[[:space:]]+')[[1]]
        exec_cmd(length(argv),argv)
    }
}
